service: nike-emr-ming

frameworkVersion: '2'

custom:
  contactsTable: contactsTable
  csvImportBucketName: nike-${self:provider.stage}-#{AWS::AccountId}.csv-emr-demo
  logBucketName: nike-${self:provider.stage}-#{AWS::AccountId}.csv-emr-demo-log
  pythonRequirements:
    pythonBin: python3
  tableThroughputs:
    prod: "5"
    dev: "5"

provider:
  stage: ${opt:stage, 'dev'}
  timeout: 30
  name: aws
  region: us-east-1
  environment:
    CONTACTS_TABLE: ${self:custom.contactsTable}
    SUBNET_ID: !Ref PrivateSubnetC
    EMR_LOGS_BUCKET: ${self:custom.logBucketName}
    CSV_IMPORT_BUCKET: ${self:custom.csvImportBucketName}

  vpc:
    securityGroupIds:
      - !Ref VpcDefaultSecurityGroup
    subnetIds:
      - !Ref PrivateSubnetA
      - !Ref PrivateSubnetB
      - !Ref PrivateSubnetC
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "iam:PassRole"
          Resource: '*'
            # - arn:aws:iam::#{AWS::AccountId}:role/EMR_DefaultRole
            # - arn:aws:iam::#{AWS::AccountId}:role/EMR_EC2_DefaultRole

        - Effect: "Allow"
          Action:
            - "elasticmapreduce:RunJobFlow"
            # - "autoscaling-plans:*"
            # - "application-autoscaling:*"
          Resource: "*"
        - Effect: "Allow"
          Action:
            - "s3:PutObject"
          Resource:
            - "Fn::Join":
                - ""
                - - "arn:aws:s3:::"
                  # - ${self:custom.csvImportBucketName}
                  - !Ref CsvImportS3Bucket
                  - "/*"
            - !Join ['', ['arn:aws:s3:::', !Ref LogBucket, '/emr-logs/*']]
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource:
            - "Fn::GetAtt": [ContactsTable, Arn]
            - "Fn::Join":
                - "/"
                - - { "Fn::GetAtt": [ContactsTable, Arn] }
                  - "index/*"

functions:
  - ${file(resources/functions/python_emr.yml)}
  - ${file(resources/functions/java_api.yml)}

resources:
  - ${file(resources/s3.yml)}
  - ${file(resources/vpc.yml)}
  - ${file(resources/dynamodb.yml)}
  - ${file(resources/emr.yml)}

package:
  individually: true
  include:
    - "scripts/*.q"
    - "src/*.py"
  exclude:
    - "**/*"
plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters
  - serverless-offline
