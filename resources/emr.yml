Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH from anywhere"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.1.0.0/16
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - elasticmapreduce.amazonaws.com
          - Effect: Allow
            Action:
              - 'iam:CreateServiceLinkedRole'
              - 'iam:PutRolePolicy'
            Resource: '*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole
  JobFlowRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
          - Effect: Allow
            Action:
              - 'iam:CreateServiceLinkedRole'
              - 'iam:PutRolePolicy'
            Resource: '*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: JobFlowRole

  # Cluster:
  #   Type: AWS::EMR::Cluster
  #   Properties:
  #     Name: ${self:service}
  #     VisibleToAllUsers: true
  #     LogUri: !Join ['', ['s3://', !Ref LogBucket, '/emr-logs/']]
  #     # "s3://aiyi.hive/emr-logs/"
  #     ReleaseLabel: emr-5.33.1
  #     Applications:
  #       - Name: Hive
  #       - Name: Hue
  #       - Name: Mahout
  #       - Name: Pig
  #       - Name: Tez
  #     JobFlowRole:
  #       Ref: InstanceProfile
  #     ServiceRole:
  #       Ref: ServiceRole
  #     ScaleDownBehavior: TERMINATE_AT_TASK_COMPLETION
  #     Configurations:
  #       - Classification: hive-site
  #         ConfigurationProperties:
  #           hive.execution.engine: mr
  #     Instances:
  #       TerminationProtected: false
  #       Ec2KeyName: emr
  #       # Ec2SubnetId: !Ref PrivateSubnetC
  #       Ec2SubnetId: !Ref PublicSubnetC
  #       AdditionalMasterSecurityGroups:
  #         - Ref: SecurityGroup
  #       MasterInstanceGroup:
  #         InstanceCount: 1
  #         InstanceType: m1.medium
  #         Market: ON_DEMAND
  #         Name: MasterInstance
  #       CoreInstanceGroup:
  #         InstanceCount: 1
  #         InstanceType: m1.medium
  #         Market: ON_DEMAND
  #         Name: CoreInstance
  # CreateDBMetaTable:
  #   Type: AWS::EMR::Step
  #   Properties:
  #     ActionOnFailure: CONTINUE
  #     HadoopJarStep:
  #       Args:
  #         - hive-script
  #         - "--run-hive-script"
  #         - "--args"
  #         - "-f"
  #         - "Fn::Join":
  #             - "/"
  #             - - "s3:/"
  #               - !Ref LogBucket
  #               - "scripts/dynamodb_hive.q"
  #         - "-d"
  #         - DYNAMODBTABLE=${self:custom.contactsTable}
  #       Jar: command-runner.jar
  #       StepProperties: []
  #     JobFlowId:
  #       Ref: Cluster
  #     Name: Create Dynamodb Metadata Table
